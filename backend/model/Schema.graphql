type User {
  id: Int
  createdAt: String
  email: String
  password: String
  todos: [Todo]
}

type Todo {
  id: Int
  createdAt: String
  task: String
  done: Boolean
  pvt:Boolean
  user: User
}

type UserRes{
  error: String,
  data: User
}

type TodoRes{
  error: String,
  data: Todo
}


type QueryRes{
  error: String,
  data: [Todo]
}


type Query {
  say :String!
  getTodoById(id: Int!): TodoRes!
  getTodosByUser: QueryRes!
  getUserById(token:String!): UserRes!
}

type Mutation {
  signUp(email: String!, password: String!): UserRes!
  login(email: String!, password: String!): UserRes!
  logoutUser:UserRes!
  removeUser(id:Int!,password:String!):UserRes!
  addTodo(task:String!,done:Boolean!):TodoRes!
  delletTodo(id:Int!):TodoRes!
  updateTodo(id:String! ,task: String,done: Boolean):TodoRes!
}
